{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "execute:\n",
        "  echo: true\n",
        "  eval: false\n",
        "  error: false\n",
        "---\n",
        "\n",
        "\n",
        "## Writing an academic paper with Quarto {#sec-Quarto_exercise}\n",
        "\n",
        "In this exercise we will start to write an academic manuscript using Quarto and incorporating data from the example R project we have used in the other exercises. The project is the same that is created in the first workflow [exercise](@sec-Rproj_zenodo_exercise), however to save time or in case you haven't completed this exercise we will start with the finished output from it.\n",
        "\n",
        "::: {.content-hidden when-format=\"pdf\"}\n",
        "If you would prefer to view the exercise script offline, here is a PDF version: <a href=\"https://blenback.github.io/R-for-Reproducible-Research/exercises/Quarto-manuscript_exercise.pdf\" class=\"download\"><i class=\"fa fa-download\"></i> <b>Download exercise instructions</b></a>\n",
        ":::\n",
        "\n",
        "### Step 1: Download the resources\n",
        "\n",
        "-   Click here to download the resources for the exercise: <a href=\"https://drive.google.com/uc?export=download&id=1TN3DZqetynnNWlTeV2eKqJDcU53fq9Zg\" class=\"download\"><i class=\"fa fa-download\"></i> <b>Download resources for exercise</b></a>\n",
        "\n",
        "-   Unzip the downloaded file and move the folder to a location on your computer where you can easily find it.\n",
        "\n",
        "### Step 2: Open the project in RStudio\n",
        "\n",
        "-   Open RStudio and navigate to the folder where you saved the resources for the exercise.\n",
        "-   Open the Rstudio project file in the directory (`Rice_farm_analysis.Rproj`)\n",
        "\n",
        "### Step 3: Download Quarto\n",
        "\n",
        "-   **Note**: Because Quarto is bundled with Rstudio if you have a recent version of Rstudio you may already have Quarto installed. To check go to *File \\> New File* and you should see *Quarto* Document as an option.\n",
        "\n",
        "-   If you do not have Quarto installed you can install it from the Quarto website [here](https://quarto.org/docs/download/)\n",
        "\n",
        "### Step 4: Create a Quarto document for the article content\n",
        "\n",
        "The Quarto website provides a [template](https://github.com/quarto-ext/manuscript-template-rstudio) for creating a Manuscript project but we will create one from scratch so that you understand the various files.\n",
        "\n",
        "-   The 1st step is to create a Quarto document that will act as the primary content file, go to *File \\> New File \\> Quarto Document*. You don't need to add title or author information in the wizard as we will do this in the document itself.\n",
        "\n",
        "![Quarto document wizard](assets/images/quarto-new-file.png){fig-align=\"center\" width=\"70%\"}\n",
        "\n",
        "-   Save the file as `index.qmd` in the root directory of the project. Using `index` as the file name is the convention for the main content file in a Quarto project and the software will look for this when attempting to create an output of the content. However it is possible to use a different file name if you prefer but it requires setting an option in the configuration file.\n",
        "\n",
        "### Step 5: Create a `_quarto.yml` configuration file\n",
        "\n",
        "[YAML](https://en.wikipedia.org/wiki/YAML) files (`.yml`) are configuration files, and in the case of Quarto the convention is to use a file named `_quarto.yml` in the root directory of the project. This file will be used to set a range of options including the project type, code execution options and options for the output format/s.\n",
        "\n",
        "-   Create a new file with *File \\> New File \\> Text File* and save it to the root directory of the project and name it `_quarto.yml`. Adding the extension `.yml` will automatically set the file type to YAML.\n",
        "\n",
        "### Step 6: Specify the `Manuscript` project type in the configuration file\n",
        "\n",
        "-   **Note**: All YAML options are set using [key-value pairs](https://www.commonwl.org/user_guide/topics/yaml-guide.html#key-value-pairs) and the Quarto documentation provides a [list of options](https://quarto.org/docs/projects/quarto-projects.html) that can be set in the configuration file.\n",
        "\n",
        "-   The first step is to identify your project as a manuscript by entering the following code in the `_quarto.yml` file:\n",
        "\n",
        "``` {.yaml filename=\"_quarto.yml\"}\n",
        "project: \n",
        "  type: manuscript\n",
        "```\n",
        "\n",
        "-   If you do want your main content file to be named something other than `index.*` you can add the file name with the `article` key (but make sure that your `.qmd` file name matches the entry):\n",
        "\n",
        "``` {.yaml filename=\"_quarto.yml\"}\n",
        "manuscript:\n",
        "  article: Rice_farm.qmd\n",
        "```\n",
        "\n",
        "### Step 7: Set output formats in the configuration file\n",
        "\n",
        "The next step is to set the output formats for the document. Quarto supports outputting your manuscript to a range of formats simultaneously including HTML, PDF, Docx and LaTeX. The output formats and their individual options are also set in the `_quarto.yml` file.\n",
        "\n",
        "-   For this exercise we will set the output formats to HTML, docx and PDF. Add the following code to the `_quarto.yml` file:\n",
        "\n",
        "``` {.yaml filename=\"_quarto.yml\"}\n",
        "format:\n",
        "  html:\n",
        "    toc: true\n",
        "    comments:\n",
        "      hypothesis: true\n",
        "  docx: default\n",
        "```\n",
        "\n",
        "-   For PDF outputs specifically, there a number of templates that have been produced to align with the formatting of major academic publishers. These are available as [Quarto extensions](https://quarto.org/docs/extensions/listing-journals.html).\n",
        "\n",
        "-   For this exercise we will use the [Elsevier template](https://github.com/quarto-journals/elsevier). Quarto extensions can be installed directly using the terminal in Rstudio. To install the Elsevier template run the following code in the terminal: `quarto add quarto-journals/elsevier`\n",
        "\n",
        "![](assets/images/quarto-elsevier-install.png){fig-align=\"center\" width=\"70%\"}\n",
        "\n",
        "-   Once the template is installed you can set the PDF output to use the template by adding the following code to the `_quarto.yml` file indented below the existing `format` entry:\n",
        "\n",
        "``` {.yaml filename=\"_quarto.yml\"}\n",
        "  elsevier-pdf: default\n",
        "```\n",
        "\n",
        "### Step 8: Complete the front matter content\n",
        "\n",
        "The front matter of the document is where you can enter the title, author/s and other metadata for the document. In the case of academic manuscripts this also includes the abstract, keywords, author institutions and roles (according to the [CRediT Taxonomy](https://authorservices.wiley.com/author-resources/Journal-Authors/open-access/credit.html)). The full list of front matter options for Quarto manuscripts can be found [here](https://quarto.org/docs/authoring/front-matter.html).\n",
        "\n",
        "Front matter is entered as YAML content at the start of the main content file `index.qmd`. To be recognised as YAML content it must be enclosed by three dashes `---` at the start and end of the content block.\n",
        "\n",
        "-   Enter example front matter for this exercise as follows:\n",
        "\n",
        "``` yaml\n",
        "---\n",
        "title: An Analysis of Rice Production in Indonesia\n",
        "author:\n",
        "  - name: Jane Doe\n",
        "    orcid: 0000-0002-0760-5497\n",
        "    corresponding: true\n",
        "    email: Janedoe@gmail.com\n",
        "    roles:\n",
        "      - Investigation\n",
        "      - Project administration\n",
        "      - Software\n",
        "      - Visualization\n",
        "    affiliations:\n",
        "      - id: ETH_PLUS\n",
        "        name: ETH Zürich\n",
        "        department: Planning of Landscape and Urban Systems (PLUS) Institut für Raum- und Landschaftsentwicklung (IRL)\n",
        "        address: HIL H 52.1, Stefano-Franscini-Platz 5\n",
        "        city: Zürich\n",
        "        postal-code: 8093\n",
        "  - name: John Doe\n",
        "    orcid: 0000-0002-7859-8394\n",
        "    corresponding: false\n",
        "    roles: []\n",
        "    affiliations: \n",
        "      - id: ETH_PLUS\n",
        "keywords:\n",
        "  - Rice farms\n",
        "  - Indonesia\n",
        "  - Regional production\n",
        "abstract: |\n",
        "  This is the abstract\n",
        "plain-language-summary: |\n",
        "  Rice production data for the country of Indonesia is analysed ...\n",
        "date: last-modified\n",
        "number-sections: true\n",
        "---\n",
        "```\n",
        "\n",
        "Now take some time to practice editing this content by, for example, changing the title, adding yourself as an author or changing the abstract. You will see that indentation is very important for YAML content to work correctly.\n",
        "\n",
        "One nice feature is the fact that you can use the `affiliation: id` option to avoid needing to repeat details for authors from the same institution.\n",
        "\n",
        "### Step 7: Add manuscript content\n",
        "\n",
        "Now we have our manuscript project and content file set up let's add some content. Content in Quarto files is written in [Markdown](https://en.wikipedia.org/wiki/Markdown) format, which takes some getting used to but will quickly become intuitive.\n",
        "\n",
        "-   Add some content to the `index.qmd` file. For example, use `#` to create a heading and `##` for subheadings:\n",
        "\n",
        "``` markdown\n",
        "# Introduction\n",
        "\n",
        "Rice is a staple food in Indonesia and is grown in many regions across the country. The production of rice is a key economic activity in Indonesia and is a major source of employment for many people. In this study we analyse the production of different types of rice in different regions in Indonesia.  \n",
        "\n",
        "# Methods\n",
        "\n",
        "## Data\n",
        "For this study we used data from the Indonesian Ministry of Agriculture on rice production in the country. The data was collected from different regions across Indonesia and includes information on the types of rice grown, the amount of rice produced and the area of land used for rice cultivation.\n",
        "\n",
        "# Results\n",
        "\n",
        "Figure 1 shows the distribution of rice production across different regions in Indonesia. Table 1 shows the types of rice grown in each region and the amount of rice produced.\n",
        "```\n",
        "\n",
        "Now lets render our manuscript for the first time to see how the output looks. To render the document click the `Render` button in the top of the Rstudio source pane:\n",
        "\n",
        "![](assets/images/rstudio-render-button.png){fig-align=\"center\" width=\"70%\"}\n",
        "\n",
        "This will render the document to HTML and open it in the viewer pane on the right:\n",
        "\n",
        "![](assets/images/quarto-html-output.png){fig-align=\"center\" width=\"70%\"}\n",
        "\n",
        "### Step 8: Add Figures and Tables\n",
        "\n",
        "Figures and tables can be added to quarto documents using code blocks in various programming languages. To add a code block into a Quarto document you use three backticks followed by the language name in braces, for example an R chunk would be: ```` ```{r} ```` and then close the block with another three backticks. Code blocks are executed when the document is rendered and the output is included in the final document (although this behaviour can be controlled with [execution options](https://quarto.org/docs/computations/execution-options.html)).\n",
        "\n",
        "Lets add a figure to the document using the R code from the exercise script `Scripts/02_data_visualisation.R` to create a bar chart of the area of farms growing different types in different regions in Indonesia.\n",
        "\n",
        "-   Add the following code block to the `index.qmd` file below the `Results` heading: \n",
        "\n",
        "```{{r}}\n",
        "\n",
        "# Load required packages\n",
        "library(ggplot2)\n",
        "\n",
        "# load the summarized data\n",
        "rice_data_summary <- read.csv(\"Data/Processed/RiceFarms_summary.csv\")\n",
        "\n",
        "# plot summary data as grouped bar chart\n",
        "ggplot(rice_data_summary, aes(x=region, y=size, fill=varieties)) +\n",
        "  geom_bar(stat=\"identity\", position=\"dodge\") +\n",
        "  labs(title=\"Total size of farms by region and rice varieties\",\n",
        "       x=\"Region\",\n",
        "       y=\"Total size of farms\",\n",
        "       fill=\"Rice varieties\") +\n",
        "  theme_minimal() +\n",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n",
        "```\n",
        "\n",
        "Now if you re-render the document you should see the figure included in the output.\n",
        "\n",
        "### Step 9: Add Cross-references\n",
        "\n",
        "Quarto allows you to [cross-reference](https://quarto.org/docs/authoring/cross-references.html) figures, tables and sections in your document.\n",
        "\n",
        "-   Add a label to the figure code block by adding the following line at the top of the code block:\n",
        "\n",
        "```{{r}}\n",
        "#| label: fig-barchart\n",
        "```\n",
        "\n",
        "-   Now add a cross-reference to this figure in the text by changing the word `Figure 1` to `@fig-barchart` in the 1st sentence of the `Results` section:\n",
        "\n",
        "``` markdown\n",
        "# Results\n",
        "\n",
        "@fig-barchart shows the distribution of rice production across different regions in Indonesia. Table 1 shows the types of rice grown in each region and the amount of rice produced.\n",
        "```\n",
        "\n",
        "-   Now if you re-render the document you will see that the figure has been automatically numbered and the text now contains a hyperlinked cross reference to the figure:\n",
        "\n",
        "![](assets/images/quarto-figure-cross-reference.png){fig-align=\"center\" width=\"70%\"}\n",
        "\n",
        "### Step 10: Add citations\n",
        "\n",
        "Quarto provides the functionality to not only add citations to your documents but to automatically generate a bibliography, both of which can be formatted according to a wide range of citation styles to meet journal requirements. For a detailed explanation of citations with Quarto see the guide [here](https://quarto.org/docs/authoring/citations.html).\n",
        "\n",
        "Quarto uses the standard Pandoc markdown representation for citations, whereby citations go inside square brackets and are separated by semicolons, e.g. `[@citation]`. Citations can be entered manually however they need to have a corresponding entry in the articles bibliography file (a `.bib` or `.csl` file in the root directory of the project). Instead, we will add a citation using the wizard in the [Quarto visual editor](https://quarto.org/docs/visual-editor/) which will automatically create the citation entry in the bibliography file.\n",
        "\n",
        "-   At the top of the source pane click the `Visual` button to switch to the visual editor:\n",
        "\n",
        "![](assets/images/visual-editing-switch-modes.png){fig-align=\"center\" width=\"70%\"}\n",
        "\n",
        "-   Navigate the methods section and position the cursor at the end of the sentence:\n",
        "\n",
        "\n",
        "``` {markdown}\n",
        "For this study we used data from the Indonesian Ministry of Agriculture on rice production in the country.\n",
        "```\n",
        "\n",
        "\n",
        "-   In the Visual editor tool bar at the top the top of the source pane click *Insert* and in the drop down menu select *Citation* (or alternatively use the keyboard shortcut *Ctrl + Shift + F8* on windows). This will open the **Insert Citation** wizard:\n",
        "\n",
        "![](assets/images/insert_citation.png){fig-align=\"center\" width=\"70%\"}\n",
        "\n",
        "-   The Rice Farms data used for the exercises comes from the [`plm`](https://rdrr.io/rforge/plm/man/RiceFarms.html) package so we will cite this as an example (even though it is totally accurate in terms of the sentence content). Click on the tab for R packages on the left side of the wizard, enter **plm** in the search bar and click on the entry in the window below to select it:\n",
        "\n",
        "![](assets/images/cite-plm.png){fig-align=\"center\" width=\"70%\"}\n",
        "\n",
        "-   Make sure the **Create** box in the bottom left corner of the wizard has a value in it, the default should be `references.bib`.\n",
        "\n",
        "-   Now click **Insert** and the wizard will close, you will see that the citation has been added at the cursor location and a `references.bib` has been created in the root directory of the project. If you openthis file you can see the bibliographic details of the citation (Note if you have previously added citations or already created a `references.bib` file citations will all be added to the same file.\n",
        "\n",
        "Now when you render the document this citation will automatically be hyperlinked to the corresponding entry in the bibliography that is appended to the end of the document.\n",
        "\n",
        "**Tip:** In our experience the easiest method of adding academic citations is to use the [Quarto-Zotero](https://quarto.org/docs/visual-editor/technical.html#citations-from-zotero) integration. In this case you select the Zotero tab in the **Insert Citation** wizard and if Zotero is running on your computer you will be able to search your whole library to add citations.\n",
        "\n",
        "### Summary\n",
        "\n",
        "In this exercise we have only touched upon a few of the many of the useful features of Quarto for writing reproducible research documents. As such we would urge you to look through the [Quarto documentation](https://quarto.org/docs/guide/) to learn about some of the other features as well as useful packages and extensions such as the [trackdown](https://claudiozandonella.github.io/trackdown/) package which allows you to convert Quarto documents in Google docs (and back to Quarto again) to facilitate collaboration with users not familiar with the format."
      ],
      "id": "d1b4d3bd"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}