---
execute:
  echo: true
  eval: false
  error: false
---

## Containerization with Docker exercise {#sec-docker_exercise}

In this exercise we will create a Docker container for an example R project. The project is the same that is created in the first workflow [exercise](@sec-Rproj_zenodo_exercise), however to save time or in case you haven't completed this exercise we will start with the finished output from it.

If you would prefer to view the exercise script offline, here is a PDF version: <a href="https://www.example.com/example.zip" class="download"><i class="fa fa-download"></i> <b>Download exercise instructions</b></a>

### Step 1: Download the resources

-   Click here to download the resources for the exercise: <a href="https://www.example.com/example.zip" class="download"><i class="fa fa-download"></i> <b>Download resources for exercise</b></a>
-   Unzip the downloaded file and move the folder to a location on your computer where you can easily find it.

### Step 2: Download Docker

-   Download Docker Desktop for your operating system from the [Docker website](https://www.docker.com/products/docker-desktop).
-   Once downloaded run the installer like you would for other software. You may need to restart your computer after installation.
-   While this is happening it is useful to make a Docker account. This is not necessary but can be useful for managing your containers. You can also sign in with your GitHub account.

### Creating the Dockerfile

-   Open Rstudio and navigate to the folder you downloaded in step 1.
-   Create a new R script and name it `Dockerfile.R`.
-   Install the Dockerfiler package: `install.packages("dockerfiler")`.
-   Add the following code to the script:
```{r}
library(dockerfiler)

# Create a dockerfile template
my_dock <- Dockerfile$new()

# Add maintainer
my_dock$MAINTAINER("Your_name", "Your_email")

# Add R and RStudio base image
my_dock$FROM("rocker/rstudio:4.0.3")

# Add R packages



