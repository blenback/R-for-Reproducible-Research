---
execute:
  echo: false
  eval: true
  error: false
  output: true
  include: true
---

<!-- Web content -->

::: {.content-hidden when-format="revealjs"}
::: columns
::: {.column width="70%"}
[Quarto](https://quarto.org/) is an open source scientific and technical publishing system developed by [Posit](https://posit.co/) the same company that also created Rstudio. Quarto allows you to integrate code in multiple programming languages, with written material, and a wide variety of interactive visual components into a range of different document formats. If you are familiar with [Rmarkdown](https://rmarkdown.rstudio.com/) then you will find Quarto familiar as it is in many ways an evolution of this.

The Quarto website presents [many examples](https://quarto.org/docs/gallery/) of the application of the software but here we will focus on some of it's key uses and features that are relevant for academics and producing reproducible research.
:::

::: {.column width="30%"}
![](assets/images/quarto_diamond_logo.png){fig-align="center" width="70%"}
:::
:::

### Writing academic manuscripts

We all know how painful it can be switching between multiple programs to produce academic manuscripts, maybe you write your text in word, and produce your visualizations in R or Python before having to convert the end result to PDF for submission. This is especially annoying when you need to update parts of the manuscript as part of the review process.

Quarto solves this problem by allowing you to write full academic manuscripts from start to finish including text, code, and visualizations in a single program. This functionality has been expanded even further with the release of [Quarto Manuscripts](https://quarto.org/docs/manuscripts/) as a project type from Quarto version 1.4.

Some key benefits of writing your manuscript with Quarto include:

-   Figures and tables are dynamically updated as your code changes

-   Supports the use and inclusion of R, Python and Julia code as well as LaTeX and Markdown

-   Simple cross-referencing capability for figures, tables, and sections

-   Documents can be rendered as Word, PDF, or HTML

-   Easily include citations and bibliographies from Crossref, DataCite, and PubMed as well as with direct integration with [Zotero](https://www.zotero.org/)

-   High quality formatting options for equations and tables

-   Quarto's `.qmd` files can be edited with various code/text editors including VS Code, RStudio and more

-   Track changes and collaborate using Git or other version control systems.

Writing your academic manuscripts with Quarto is more reproducible as it allows others to use your underlying manuscript file in combination with your data to directly re-create your results.

In one of our exercises you will practice [creating a manuscript with Quarto for an example project](@sec-Quarto_exercise)

### Presentations with RevealJS

Quarto also allows you to create presentations in several formats [RevealJS](https://revealjs.com/), [Microsoft Powerpoint](https://quarto.org/docs/presentations/powerpoint.html) and [Beamer](https://quarto.org/docs/presentations/beamer.html) using a common syntax. In fact the [presentation document](https://blenback.github.io/R-for-Reproducible-Research/presentation.html) for this workshop is created using Quarto and RevealJS.

Some useful features of making presentations with Quarto include:

-   Selection of pre-existing modern themes with functionality to publish your own theme.

-   Include interactive content: Executable code blocks and visual components (graphs and maps)

-   Dynamic resizing of content depending on screen size

-   Functionality for slide notes, automatic transitions, timers etc.

-   Easy export to PDF or HTML

-   Similar to manuscripts code-based content is dynamically updated.

### Websites

Quarto can also be used to create websites that can be freely hosted through Github Pages or other services like Netlify or Posit Connect. This is a great way to share your research with a wider audience or promote your work. Creating Quarto websites is an intuitive and user-friendly process and because it uses the [Bootstrap](https://getbootstrap.com/docs/5.0/getting-started/introduction/) framework there is a lot of guidance available for customizing beyond the 25 default themes

Some examples from the authors:

-   This website is created with Quarto and hosted on Github Pages and you can see all of it's source code [here](https://github.com/blenback/R-for-Reproducible-Research).

-   This is an example of personal website created by Ben to share publications, presentations and blog content: <https://blenback.github.io/>

![Researchers personal website](assets/images/Personal_website.gif){fig-align="center" width="70%"}

-   This is a Multi-lingual website created for a research project in Peru to share progress and results of the project: <https://nascent-peru.github.io/>.

![NASCENT-Peru website](assets/images/NASCENT_website.gif){fig-align="center" width="70%"}

### Dashboards to demostrate your research output

[Quarto dashboards](https://quarto.org/docs/dashboards/) allow you to arrange multiple interactive or static components in a single page with a highly customizable layout. These components can include text summaries, tables, plots, maps and more. This is a great way to collect feedback on aspects of your research during the development process or to present your results in a visually appealing way.

Here is an interactive example produced using Python interactive plots:

<figure>

<iframe width="650" height="650" src="https://jjallaire.github.io/gapminder-dashboard/" title="Gapminder dashboard from JJallaire">

</iframe>

<figcaption>Gapminder dashboard from [JJallaire](https://jjallaire.github.io/gapminder-dashboard/).</figcaption>

</figure>

<!-- ![](https://quarto.org/docs/dashboards/examples/thumbnails/customer-churn-dashboard.png){fig-align="center" width="70%"} -->

### Data exploration and visualization

As has been mentioned already Quarto provides a lot of options for creating interactive data visualisations, tables and diagrams using frameworks such as:

-   [Plotly](https://plotly.com/python/)
-   [Leaflet](https://ipyleaflet.readthedocs.io/en/latest/)
-   [Jupyter Widgets](https://ipywidgets.readthedocs.io/en/latest/)
-   [htmlwidgets](https://www.htmlwidgets.org/)
-   [ObservableJS](https://observablehq.com/@observablehq/observables-not-javascript)
-   [Shiny](https://shiny.rstudio.com/)

There are lots of examples of these on the [Quarto website](https://quarto.org/docs/gallery/#interactive-docs) but one we particularly like is Leaflet which allows you to create interactive maps with markers, popups and other features. In a research context this is useful to others to explore the spatial results of your research. Here is a simple example we used to show the locations and timings of workshops we were conducting in Peru.

```{r}
#| code-fold: true
#| echo: true
#| eval: true
#| output: true
#| include: true

library(leaflet)
library(fontawesome)
library(mapview)


national <- makeAwesomeIcon(text = fa("people-roof"),
                              iconColor = 'white',
                              library = 'fa',
                              markerColor = 'darkgreen')
  
regional <- makeAwesomeIcon(text = fa("people-roof"),
                              iconColor = 'white',
                              library = 'fa',
                              markerColor = 'lightgreen')


#uncomment for saving map
#Workshop_locations <- 
  leaflet(options = leafletOptions(zoomControl = FALSE,
                                 attributionControl=FALSE)) %>%
  #addProviderTiles(providers$Esri.WorldTerrain) %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addAwesomeMarkers(lng=-77.043,
                    lat=-12.038,
                    icon= national,
                    popup="Lima, National Workshop 9th May",
                    label = "Lima, National Workshop, 9th May",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))%>%
  addAwesomeMarkers(lng=-69.189, lat=-12.594, icon = regional, popup="Puerto Maldonado, Regional Workshop", label = "Puerto Maldonado Regional Workshop 28th May",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))%>%
  addAwesomeMarkers(lng=-77.529, lat=-9.526, icon = regional, popup="Huaraz, Regional Workshop", label = "Huaraz, Regional Workshop 4th June",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))%>%
  addAwesomeMarkers(lng=-76.370, lat=-6.485, icon = regional, popup="Tarapoto, Regional Workshop", label = "Tarapoto, Regional Workshop 10th June",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))%>%
  addAwesomeMarkers(lng=-80.63282, lat=-5.19449, icon = regional, popup="Piura, Regional Workshop", label="Piura, Regional Workshop 20th May",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))
```
:::

<!-- Presentation content -->

::: {.content-visible when-format="revealjs"}
## Quarto

::: {.columns .v-center-container}
::: {.column width="70%"}
-   An open source scientific and technical publishing system

-   Integrates code in multiple programming languages, written material, and interactive visual components

-   Produces a range of document formats including HTML, PDF, and Word

-   Developed by [Posit](https://posit.co/) the same company that created Rstudio.
:::

::: {.column width="30%"}
![](assets/images/quarto_diamond_logo.png){fig-align="center"}
:::
:::

## Quarto

-   Quarto website presents [many examples](https://quarto.org/docs/gallery/) of it's applications
-   We will focus on some of it's key uses and features that are relevant for academics and producing reproducible research.
    -   Academic manuscripts
    -   Presentations
    -   Websites
    -   Interactive dashboards
    -   Data exploration and visualization

## Quarto

### Writing academic manuscripts

How many programs do you currently use when writing academic papers?

![A common workflow of academic papers [@lusseau2024]](assets/images/trad_paper_workflow.png){fig-align="center"}

## Quarto

### Writing academic manuscripts

Quarto solves this problem by allowing you to write full academic manuscripts from start to finish including text, code, and visualizations in a single document:

![](assets/images/quarto_document_writing.png){fig-align="center"}

## Quarto

### Writing academic manuscripts

Key benefits:

-   Figures and tables are dynamically updated as your code changes
-   Supports code in R, Python and Julia as well as LaTeX and Markdown content
-   Easy Cross-referencing capability for figures, tables, and sections
-   Documents can be rendered as Word, PDF, or HTML
-   Include Citations and bibliographies using Crossref, DataCite, PubMed and direct integration with [Zotero](https://www.zotero.org/)
-   Quarto's `.qmd` files can be edited with various code/text editors (VS Code, RStudio etc.)

::: fragment
**More reproducible as it allows others to use your underlying manuscript file in combination with your data to directly re-create your results.**
:::

## Quarto

### Presentations

Several formats: [RevealJS](https://revealjs.com/), [Microsoft Powerpoint](https://quarto.org/docs/presentations/powerpoint.html) and [Beamer](https://quarto.org/docs/presentations/beamer.html) using a common syntax.

Useful features:

-   Modern themes with functionality to publish your own theme.

-   Interactive content: Executable code blocks, graphs, maps

-   Dynamic resizing of content depending on screen size

-   Functionality for slide notes, automatic transitions, timers etc.

-   Easy export to PDF or HTML

-   Similar to manuscripts code-based content is dynamically updated.

## Quarto

### Websites

Websites to act as guides, tutorials or teaching materials:

![](assets/images/workshop_website.png){fig-align="center"}

## Quarto

### Websites

Personal websites to share publications and presentations:

![](assets/images/Personal_website.gif){fig-align="center"}

## Quarto

### Websites

Websites for research projects to share progress and results:

![](assets/images/NASCENT_website.gif){fig-align="center"}

## Quarto

### Dashboards

::: {.columns .v-center-container}
::: {.column width="60%"}
-   Arrange multiple interactive or static components in a single page with a highly customizable layout.
-   Components can include text summaries, tables, plots, maps and more.
-   Uses: Collect feedback on aspects of your research during development or present your results in a visually appealing way.
:::

::: {.column width="40%"}
![Gapminder dashboard from [JJallaire](https://jjallaire.github.io/gapminder-dashboard/)](assets/images/dashboard.gif){fig-align="center"}
:::
:::

## Quarto

### Data exploration and visualization

::: {.columns .v-center-container}
::: {.column width="50%"}
Many options for interactive data visualisations, tables and diagrams using:

-   [Plotly](https://plotly.com/python/)
-   [Leaflet](https://ipyleaflet.readthedocs.io/en/latest/)
-   [Jupyter Widgets](https://ipywidgets.readthedocs.io/en/latest/)
-   [htmlwidgets](https://www.htmlwidgets.org/)
-   [ObservableJS](https://observablehq.com/@observablehq/observables-not-javascript)
-   [Shiny](https://shiny.rstudio.com/)
:::

::: {.column width="50%"}
```{r}
#| echo: false
#| eval: true
#| output: true
#| include: true

library(leaflet)
library(fontawesome)
library(mapview)


national <- makeAwesomeIcon(text = fa("people-roof"),
                              iconColor = 'white',
                              library = 'fa',
                              markerColor = 'darkgreen')
  
regional <- makeAwesomeIcon(text = fa("people-roof"),
                              iconColor = 'white',
                              library = 'fa',
                              markerColor = 'lightgreen')


#uncomment for saving map
#Workshop_locations <- 
  leaflet(options = leafletOptions(zoomControl = FALSE,
                                 attributionControl=FALSE)) %>%
  #addProviderTiles(providers$Esri.WorldTerrain) %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addAwesomeMarkers(lng=-77.043,
                    lat=-12.038,
                    icon= national,
                    popup="Lima, National Workshop 9th May",
                    label = "Lima, National Workshop, 9th May",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))%>%
  addAwesomeMarkers(lng=-69.189, lat=-12.594, icon = regional, popup="Puerto Maldonado, Regional Workshop", label = "Puerto Maldonado Regional Workshop 28th May",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))%>%
  addAwesomeMarkers(lng=-77.529, lat=-9.526, icon = regional, popup="Huaraz, Regional Workshop", label = "Huaraz, Regional Workshop 4th June",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))%>%
  addAwesomeMarkers(lng=-76.370, lat=-6.485, icon = regional, popup="Tarapoto, Regional Workshop", label = "Tarapoto, Regional Workshop 10th June",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))%>%
  addAwesomeMarkers(lng=-80.63282, lat=-5.19449, icon = regional, popup="Piura, Regional Workshop", label="Piura, Regional Workshop 20th May",
                    labelOptions = labelOptions(#noHide = TRUE,
                                                direction = "bottom",
                                                style = list("color" = "black",
                                                "font-family" = "Roboto",
                                                "font-style" = "italic",
                                                "box-shadow" = "3px 3px rgba(0,0,0,0.25)",
                                                "font-size" = "12px",
                                                "border-color" = "rgba(0,0,0,0.5)")))
```
:::
:::
:::
