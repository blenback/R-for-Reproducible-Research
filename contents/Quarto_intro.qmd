<!-- Web content -->

::: {.content-hidden when-format="revealjs"}

[Quarto](https://quarto.org/) is an open source scientific and technical publishing system developed by [Posit](https://posit.co/) the same company that also created Rstudio. Quarto allows you to integrate code in multiple programming languages, with written material, and a wide variety of interactive visual components into a range of different document formats. If you are familiar with [Rmarkdown](https://rmarkdown.rstudio.com/) then you will find Quarto familiar as it is in many way an evolution of this.

The Quarto website presents [many examples](https://quarto.org/docs/gallery/) of the application of the software but here we will focus on some of it's key uses and features that are relevants for academics and producing reproducible research. 

### Writing academic manuscripts

We all know how painful it can be switching between multiple programs to produce academic manuscripts, maybe you write your text in word, and produce your visualizations in R or Python before having to convert the end result to PDF for submission. This is especially annoying when you need to update parts of the manuscript as part of the review process. 

Quarto solves this problem by allowing you to write full academic manuscripts from start to finish including text, code, and visualizations in a single program. This functionality has been expanded even further with the release of [Quarto Manuscripts](https://quarto.org/docs/manuscripts/) as a project type from Quarto version 1.4. 

Some key benefits of writing your manuscript with Quarto include:

- Figures and tables are dynamically updated as your code changes

- Supports the use and inclusion of R, Python and Julia code as well as LaTeX and Markdown  

- Simple cross-referencing capability for figures, tables, and sections

- Documents can be rendered as Word, PDF, or HTML

- Easily include citations and bibliographies from Crossref, DataCite, and PubMed as well as with direct integration with [Zotero](https://www.zotero.org/)

- Numerous high quality formatting options for equations and tables 

- Quarto's `.qmd` files can be edited with various code/text editors including VS Code, RStudio and more

- Track changes and collaborate using Git or other version control systems.

Writing your academic manuscripts with Quarto is more reproducible as it allows others to use your underlying manuscript file in combination with your data to directly re-create your results. 

### Presentations with RevealJS




### Creating and publish interactive visualisations

#### Plots

plotly, Observable JS, Shiny

```{r, fig.width=10,fig.height=7}
library(ggplot2)
library(plotly)
p <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) +
            geom_bar(position = "dodge")
ggplotly(p)
```

#### Maps with Leaflet

```{r}

library(leaflet)

leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng= 8.548, lat=47.376, popup="ETH")

```

### Dashboards to demostrate your research output

![](https://quarto.org/docs/dashboards/examples/thumbnails/customer-churn-dashboard.png){fig-align="center" width="70%"} 

### Create multilingual websites for your research projects

![](assets/images/quarto_multilingual.png){fig-align="center" width="70%"}
:::



<!-- Presentation content -->

::: {.content-visible when-format="revealjs"}
### Introduction to Quarto

**A Unified Authoring Framework**

-   Integrates code, text, and interactive visuals
-   Produces publishable documents
-   Updates dynamically as code changes

### Key Features of Quarto

**What Quarto Allows You To:**

-   Create dynamic content that updates with your code
-   Utilize high-quality Pandoc Markdown for formatting
-   Publish your work as websites or books
-   Edit with any text editor (e.g., VS Code, RStudio)
-   Easily include citations from tools like Zotero
-   Collaborate and track changes using Git


### Compatibility Beyond R

**Multi-Language Support:**

-   **Python**: Create visualizations and run analyses
-   **Julia**: Seamless integration for data science
-   **Observable JavaScript**: Build interactive documents
-   Flexible for mixed-language projects


### Some of the creative ways in which you can use Quarto is:

#### 1. Visualize and publish interactive plots using html widgets

```{r, fig.width=10,fig.height=7}
library(ggplot2)
library(plotly)
p <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) +
            geom_bar(position = "dodge")
ggplotly(p)
```


#### 2. Create interactive geo-spatial mapping segments

```{r}

library(leaflet)

leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng= 8.548, lat=47.376, popup="ETH")

```


#### 3. Create multi-purpose dashboards to demostrate your research output

![](https://quarto.org/docs/dashboards/examples/thumbnails/customer-churn-dashboard.png){fig-align="center"}

#### 4. Create multilingual websites for your research projects

![](assets/images/quarto_multilingual.png){fig-align="left"}
:::
