{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "bibliography: references.bib\n",
        "execute:\n",
        "  echo: true\n",
        "  eval: false\n",
        "  error: false\n",
        "editor: \n",
        "  markdown: \n",
        "    wrap: 72\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "<!-- Web content -->\n",
        "\n",
        "::: {.content-visible when-format=\"html\"}\n",
        "![](assets/images/Docker_workflow.png){.lightbox width=\"70%\"\n",
        "fig-align=\"center\"}\n",
        "\n",
        "**The title of this workflow raises two questions, the first being: what\n",
        "is containerization?**\n",
        "\n",
        "Simply put containerization is the process of bundling code along with\n",
        "all of it's dependencies, i.e. all the components we discussed as making\n",
        "up the [environment](@sec-environment-management), including the\n",
        "operating system, software libraries (packages), and other system\n",
        "software. The fact everything needed to run the code is included means\n",
        "that the code is portable and can be run on any platform or cloud\n",
        "service. This also makes containerization something of a gold standard\n",
        "for reproducibility as the entire environment is explicitly re-produced.\n",
        "\n",
        "**and the second: what is Docker?**\n",
        "\n",
        "[Docker](https://www.docker.com/) is an open-source, and the most\n",
        "popular, platform for containerization. Before we dive into a practical\n",
        "example using Docker for research projects with R it is important to\n",
        "introduce some three key terms that we will come across:\n",
        "\n",
        "-   `Dockerfile`: The first step in the containerization process, they\n",
        "    are a straightforward text file containing a collection of commands\n",
        "    or procedures to create a new Docker Image. In this sense we can\n",
        "    consider a Dockerfile are the source code of Docker Image.\n",
        "    Importantly, Dockerfiles typically start from a base image, which is\n",
        "    a existing Docker Image that your image is extending.\n",
        "\n",
        "-   `Docker Image`: A read-only file that contains the instructions for\n",
        "    creating a Docker Container. Think of an image as the blueprint of\n",
        "    what will be in a container when it is running. Docker Images can be\n",
        "    shared via [Dockerhub](https://hub.docker.com/), so that they can be\n",
        "    used by others.\n",
        "\n",
        "-   `Docker Container`: Is an actual running instance of a Docker image.\n",
        "    It runs completely isolated from the host environment by default and\n",
        "    only accesses host files (i.e. data) if it has been configured to do\n",
        "    so. It is possible to create multiple containers simultaneously from\n",
        "    the same Docker Image, and each container can be started, stopped,\n",
        "    moved, and deleted independently of the others.\n",
        "\n",
        "The graphic below show the relationships between these components\n",
        "including the central commands of Docker that connect them `build` and\n",
        "`run`:\n",
        "\n",
        "![](assets/images/docker_explainer.png){.lightbox width=\"70%\"\n",
        "fig-align=\"center\"}\n",
        "\n",
        "### Using Docker with R\n",
        "\n",
        "So to create a `Docker Image` to containerize our R research projects we\n",
        "need to start by creating a `Dockerfile` and, as mentioned above, this should\n",
        "start with a base image. In our case this base image must logically\n",
        "include R and RStudio (if we want to utilise the RStudio Projects\n",
        "features).\n",
        "\n",
        "Fortunately there is a project that specifically catalogs and manages\n",
        "Docker Images for R projects: [`Rocker`](https://rocker-project.org/).\n",
        "The images available through the Rocker project not only include\n",
        "different versions of R and RStudio but also images containing\n",
        "collections of R packages for specific purposes (e.g. tidyverse for data\n",
        "wrangling and visualisation, geospatial packages etc.).\n",
        "\n",
        "In terms of actually creating the `Dockerfile` for our R project, this\n",
        "can be done manually (See a good R-focused tutorial[here](https://colinfay.me/docker-r-reproducibility/)), however there are also R packages that can help with this process such as [`dockerfiler`](https://thinkr-open.github.io/dockerfiler/) and the `[rrtools`](https://github.com/benmarwick/rrtools) package. \n",
        "\n",
        "For our [exercise](@sec-docker_exercise) of this workflow we will use the `dockerfiler` package, which uses simple assignment lines to add elements to a Dockerfile object, before saving it:\n",
        "\n",
        "\n",
        "library(dockerfiler)\n",
        "# Create a dockerfile template\n",
        "my_dock <- Dockerfile$new()\n",
        "\n",
        "# Add maintainer\n",
        "my_dock$MAINTAINER(\"Jane Doe\", \"jane_doe@gmail.com\")\n",
        "\n",
        "# Save\n",
        "my_dock$write()\n",
        "```\n",
        "\n",
        "### Docker with renv\n",
        "\n",
        "### Creating docker image \n",
        "\n",
        "One of the most important Docker commands is `build` which creates a `Docker image` from your `Dockerfile` instructions.\n",
        "\n",
        "There are two ways to use `build` command:\n",
        "1.    Through a Command Line Interface (CLI) such as the terminal in Rstudio or the terminal in your operating system (e.g Command Prompt for Windows). Open up a new Terminal window and navigate to where your code is located. Then, run the following command.\n",
        "2.    Through the Docker desktop application. Which is more user friendly if you are not familiar with the CLI.\n",
        "\n",
        "```{bash}\n",
        "docker build -t r-docker-demo .\n",
        "```\n",
        "\n",
        "You will then see that a docker image file has been created:\n",
        "\n",
        "\n",
        "### Running docker container\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "https://github.com/noamross/nyhackr-docker-talk/blob/master/Noam_Ross_DockerForTheUseR_nyhackr_2018-07-10.pdf\n",
        "\n",
        "https://www.statworx.com/en/content-hub/blog/running-your-r-script-in-docker/\n",
        "\n",
        "stevedore package for pulling images from Dockerhub using the Docker API\n",
        "https://richfitz.github.io/stevedore/\n",
        ":::"
      ],
      "id": "6186f31a"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}