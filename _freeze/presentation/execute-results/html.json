{
  "hash": "a200e0faa775fbce3f9915683b827690",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Reproducible Research with <img style=\"vertical-align:middle; height:35px; width: 35px; border: none;\n  background: none;\" src=\"assets/images/Rlogo.png\"> and <img style=\"vertical-align:middle; height:35px; width: 140px;\" src=\"assets/images/quarto-logo-trademark.svg\">: Workflows for data, projects and publications'\nsubtitle: 'Landscape 2024 masterclass'\nformat:\n  revealjs:\n    theme: [default, clean.scss]\n    embed-resources: true\n    pdf-max-pages-per-slide: 1\n    menu:\n      side: left\n    slide-number: true\n    date-format: long\n    cap-location: bottom\n    preview-links: true\nauthor:\n  - name: Ben Black\n    orcid: 0000-0002-8113-2114\n    email: bblack@ethz.ch\n    affiliations:\n      - ref: PLUS\n  - name: Nivedita Harisena\n    email: nharisena@ethz.ch\n    affiliations:\n      - ref: PLUS\n  - name: Maarten Van Strien\n    email: vanstrien@ethz.ch\n    affiliations:\n      - ref: PLUS\naffiliations:\n  - id: PLUS\n    name: \"Planning of Landscape and Urban Systems (PLUS), ETH Zurich\"\ndate: last-modified\n---\n\n\n\n\n\n\n# Schedule\n::: {.incremental}\n- Introduction (15 mins)\n- Research projects with R (30 mins)\n- Comfort break (10 mins)\n- 3 workflows for Reproducibility (20 mins)\n- Quarto (20 mins)\n- Comfort break (10 mins)\n- Exercise time (45 mins)\n- Q&A + feedback (30 mins)\n:::\n\n# Introduction\n\n<!-- {{< include contents/intro.qmd >}} -->\n\n# Research projects with R\n\n\n\n\n\n\n---\nbibliography: references.bib\n---\n\n\n\n\n\n<!-- Web content -->\n\n::: {.content-visible when-format=\"html\"}\n**Let's start with a definition of what makes a good R project from Jenny Bryan:**\n\nA good R project... *\"creates everything it needs, in its own workspace or folder, and it touches nothing it did not create.\"* Jenny Bryan[@bryan2017]\n\n**Now take a look at these lines of code, of which you have probably seen something similar at the top of many an R script:**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ggplot2\")\nlibrary(ggplot2)\nsetwd(\"C:/Users/ben/path/that/only/I/have\")\n```\n:::\n\n\n\n\n\nBut what is wrong with these lines?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ggplot2\")\nsetwd(\"C:/Users/ben/path/that/only/I/have\")\n```\n:::\n\n\n\n\n\nDoing guarantees that the project can be moved around on your computer or onto other computers and will still \"just work\".\n\n-   Projects with Rstudio\n-   Environment management\n-   Implement a logical directory structure\n-   Break up your process (master script and sub-scripts)\n-   Write clean code\n\n## Rstudio projects\n\n## Environment management\n\n-   What are environments and why are they needed? (version conflicts/ dependencies etc.\n-   Intro to renv package for environment management.\n\n## Structuring your project directory\n\n-   Set up a consistent directory structure: Data/, scripts/, results/ tools/ (not every project will be the same!)\n\n## Writing clean code:\n\n### General good practice: variable names, use functions for repetive tasks\n\n### Script headers (hint: use code snippet)\n\n### Code sections\n\nAs you may already know braced sections of code (i.e. function definitions, conditional blocks, etc.) can be folded in RStudio by clicking on the small triangle in the margin.\n\nHowever, an often overlooked feature is the ability to create named code sections that can be also folded, as well as easily navigated between. These can be used to break longer scripts into a set of discrete regions according to specific parts of the analysis. In this regard, another good tip is to give the resulting sections sequential numerical IDs:\n\n![](assets/images/code_section_sequential.png)\n\nCode sections are created by inserting a comment line that contains at least four trailing dashes (-), equal signs (=), or pound signs (#):\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Section One ---------------------------------\n \n# Section Two =================================\n \n# Section Three #############################\n```\n:::\n\n\n\n\n\nAlternatively you can use the **Code** -\\> **Insert Section** command. To navigate between code sections you can use the <strong>Jump To</strong> menu available at the bottom of the editor[@positsupport2024]:\n\n![](assets/images/code_section_jumpto.png)\n\nOr use the document outline pane in the top right corner of the source pane:\n\n![](assets/images/code_section_documentpane.dark.png)\n\n### Code styling\n\nlintr vs. styler package\n:::\n\n<!-- Presentation content -->\n\n::: {.content-visible when-format=\"revealjs\"}\n## Two cardinal sins of reproducibilty\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ggplot2\")\nsetwd(\"C:/Users/ben/path/that/only/I/have\")\n```\n:::\n\n\n\n\n\nYou might have seen such lines commonly used but what is the problem with them?\n\n## Two cardinal sins of reproducibilty\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ggplot2\")\nsetwd(\"C:/Users/ben/path/that/only/I/have\")\n```\n:::\n\n\n\n\n\n### What is a good R project?\n\nA good R project... *\"creates everything it needs, in its own workspace or folder, and it touches nothing it did not create\"* Jenny Bryan[@bryan2017]\n\nDoing guarantees that the project can be moved around on your computer or onto other computers and will still \"just work\".\n\n## Good project-orientated habits:\n\n-   Take advantage of IDE features (.Rproj, .Rprofile)\n-   Manage your environment\n-   Use logical directory structures\n-   Break up your process (master script and sub-scripts)\n-   Writing clean code\n\n## Rstudio projects\n\n## Environment management\n\nWhat are environments and why are they needed? (version conflicts/ dependencies etc. Intro to renv package for environment management. Set up a consistent directory structure: Data/, scripts/, results/ tools/ (not every project will be the same!)\n\n## Writing clean code:\n\n### Use a consistent header (hint: use code snippet)\n\n### General good practice: variable names, use functions for repetive tasks\n\n### code folding\n\n### Syntax lintr vs. styler package\n:::\n\n\n\n# Let's take a 10 minute break!\n\n# 3 workflows for Reproducibility\n\n<!--{{< include contents/Zenodo_workflow.qmd >}}-->\n\n<!--{{< include contents/Docker_workflow.qmd >}}-->\n\n<!--{{< include contents/Git_workflow.qmd >}}-->\n\n# Quarto\n\n<!-- {{< include contents/Quarto_intro.qmd >}} -->\n\n# Let's take another 10 minute break!\n\n# Now it's your turn!\n\n<!--{{< include contents/Exercise_intro.qmd >}}-->\n\n# Q&A + feedback \n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}